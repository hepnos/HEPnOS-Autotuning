#!/bin/bash
#COBALT -A radix-io
#COBALT -t 0:30:00
#COBALT --mode script
#COBALT -n 128
#COBALT -q default

set -eu
PROTOCOL=ofi+gni
HEPNOS_CONFIG=$EXPDIR/hepnos.json
HEPNOS_SSG=$EXPDIR/hepnos.ssg
DATABASES_CONFIG=$EXPDIR/databases.json
CLIENT_MARGO_CONFIG=$EXPDIR/client.json

export MARGO_OUTPUT_DIR=$EXPDIR
export MPICH_GNI_NDREG_ENTRIES=1024
export HDF5_USE_FILE_LOCKING=FALSE
rm -f ${DATABASES_CONFIG}

echo "Sourcing settings"
source $EXPDIR/settings.sh

NODES_FOR_HEPNOS=$(($NODES_PER_EXP/4))
NODES_FOR_LOADER=$(($NODES_PER_EXP - $NODES_FOR_HEPNOS))
NODES_FOR_PEP=$(($NODES_PER_EXP - $NODES_FOR_HEPNOS))

PDOMAIN=${HEPNOS_PDOMAIN}

echo "Setting up spack and modules"
source $SCRIPTDIR/../spack/share/spack/setup-env.sh
export CRAYPE_LINK_TYPE=dynamic

echo "Activating spack env"
spack env activate hepnos
spack load -r hepnos
spack load -r hepnos-dataloader
spack load -r hepnos-pep-benchmark

echo "Setting up protection domain"
apstat -P | grep ${PDOMAIN} || apmgr pdomain -c -u ${PDOMAIN}

if [ "$HEPNOS_ENABLE_PROFILING" -eq "1" ]; then
  export MARGO_ENABLE_DIAGNOSTICS=1
  export MARGO_ENABLE_PROFILING=1
else
  export MARGO_ENABLE_DIAGNOSTICS=0
  export MARGO_ENABLE_PROFILING=0
fi

echo "Starting up HEPnOS daemon"
echo "NODES_FOR_HEPNOS = ${NODES_FOR_HEPNOS}"
aprun -n ${NODES_FOR_HEPNOS} -N 2 -cc none -d 32 -p ${PDOMAIN} \
      bedrock ${PROTOCOL} -c ${HEPNOS_CONFIG} -v error &

echo "Waiting for HEPnOS daemon to start up"
while [ ! -f ${HEPNOS_SSG} ]; do sleep 10; done

if [ "$HEPNOS_LOADER_ENABLE_PROFILING" -eq "1" ]; then
  export MARGO_ENABLE_DIAGNOSTICS=1
  export MARGO_ENABLE_PROFILING=1
else
  export MARGO_ENABLE_DIAGNOSTICS=0
  export MARGO_ENABLE_PROFILING=0
fi

echo "Requesting databases"
aprun -n 1 -N 1 -p ${PDOMAIN} \
    hepnos-list-databases \
    ${PROTOCOL} -s ${HEPNOS_SSG} > ${DATABASES_CONFIG}
sed -i '$ d' ${DATABASES_CONFIG} # we have to because aprun adds a line

LOADER_PRODUCT_ARGS=""
for p in ${HEPNOS_LOADER_PRODUCTS[@]}; do
    LOADER_PRODUCT_ARGS="${LOADER_PRODUCT_ARGS} -n ${p}"
done

echo "Starting dataloader"
echo `pwd`
(time aprun -n ${NODES_FOR_LOADER} -N 1 -cc none -p ${PDOMAIN} \
             hepnos-dataloader \
             -p ${PROTOCOL} \
             -m ${CLIENT_MARGO_CONFIG} \
             -c ${DATABASES_CONFIG} \
             -i ${HEPNOS_LOADER_DATAFILE} \
             -o ${HEPNOS_DATASET} \
             -l ${HEPNOS_LABEL} \
             -b ${HEPNOS_LOADER_CLIENT_BATCH_SIZE} \
             ${HEPNOS_LOADER_CLIENT_USE_PROGRESS_THREAD} \
             ${LOADER_PRODUCT_ARGS} \
             -v ${HEPNOS_LOADER_VERBOSE} ) \
    &> $EXPDIR/dataloader-output.txt

NUM_PES=$(($HEPNOS_PEP_PES_PER_NODE * $NODES_FOR_PEP))

if [ "$HEPNOS_ENABLE_PEP" -ne "0" ]; then
    PEP_PRODUCT_ARGS=""
    for p in ${HEPNOS_PEP_PRODUCTS[@]}; do
      PEP_PRODUCT_ARGS="${PEP_PRODUCT_ARGS} -n ${p}"
    done

    if [ "$HEPNOS_PEP_ENABLE_PROFILING" -eq "1" ]; then
        export MARGO_ENABLE_DIAGNOSTICS=1
        export MARGO_ENABLE_PROFILING=1
    else
        export MARGO_ENABLE_DIAGNOSTICS=0
        export MARGO_ENABLE_PROFILING=0
    fi

    echo "Running PEP benchmark"
    (time aprun -n ${NUM_PES} -N ${HEPNOS_PEP_PES_PER_NODE} \
                -cc none -d ${HEPNOS_PEP_CORES_PER_PE} \
                -p ${PDOMAIN} hepnos-pep-benchmark \
             -p ${PROTOCOL} \
             -m ${CLIENT_MARGO_CONFIG} \
             -c ${DATABASES_CONFIG} \
             -d ${HEPNOS_DATASET} \
             -l ${HEPNOS_LABEL} \
             ${PEP_PRODUCT_ARGS} \
             ${HEPNOS_PEP_PRELOAD} \
             -v ${HEPNOS_PEP_VERBOSE} \
             -o ${HEPNOS_PEP_OBATCH_SIZE} \
             -i ${HEPNOS_PEP_IBATCH_SIZE} \
             -t ${HEPNOS_PEP_THREADS} ) \
    &> $EXPDIR/pep-output.txt
fi

echo "Shutting down HEPnOS"
aprun -n 1 -N 1 -cc none -p ${PDOMAIN} hepnos-shutdown $DATABASES_CONFIG

echo "Destroying protection domain"
apmgr pdomain -r -u ${PDOMAIN}
